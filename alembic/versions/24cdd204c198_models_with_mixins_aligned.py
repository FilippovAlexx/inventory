"""models with mixins aligned

Revision ID: 24cdd204c198
Revises: 393826f10a44
Create Date: 2025-09-09 15:04:00.536987

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "24cdd204c198"
down_revision = "393826f10a44"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'inventory_item',
        sa.Column(
            'created_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False
        )
    )
    op.create_index(
        'ix_inventory_item_product_location',
        'inventory_item',
        ['product_id', 'location_id'],
        unique=False
    )
    op.create_unique_constraint(
        'uq_inventory_item_product_location',
        'inventory_item',
        ['product_id', 'location_id']
    )
    op.drop_constraint(op.f('inventory_txn_product_id_fkey'), 'inventory_txn', type_='foreignkey')
    op.drop_constraint(
        op.f('inventory_txn_to_location_id_fkey'),
        'inventory_txn',
        type_='foreignkey'
    )
    op.drop_constraint(
        op.f('inventory_txn_from_location_id_fkey'),
        'inventory_txn',
        type_='foreignkey'
    )
    op.create_foreign_key(
        None,
        'inventory_txn',
        'location',
        ['from_location_id'],
        ['id'],
        ondelete='SET NULL'
    )
    op.create_foreign_key(
        None,
        'inventory_txn',
        'product',
        ['product_id'],
        ['id'],
        ondelete='RESTRICT'
    )
    op.create_foreign_key(
        None,
        'inventory_txn',
        'location',
        ['to_location_id'],
        ['id'],
        ondelete='SET NULL'
    )
    op.alter_column(
        'location', 'code',
        existing_type=sa.VARCHAR(length=32),
        type_=sa.String(length=64),
        existing_nullable=False
    )
    op.drop_constraint(op.f('location_code_key'), 'location', type_='unique')
    op.create_index(op.f('ix_location_code'), 'location', ['code'], unique=True)
    op.drop_constraint(op.f('product_sku_key'), 'product', type_='unique')
    op.create_index(op.f('ix_product_sku'), 'product', ['sku'], unique=True)
    op.add_column(
        'purchase_order',
        sa.Column(
            'created_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False
        )
    )
    op.drop_constraint(
        op.f('purchase_order_supplier_id_fkey'),
        'purchase_order',
        type_='foreignkey'
    )
    op.create_foreign_key(
        None,
        'purchase_order',
        'supplier',
        ['supplier_id'],
        ['id'],
        ondelete='RESTRICT'
    )
    op.create_unique_constraint(
        'uq_pol_po_product',
        'purchase_order_line',
        ['purchase_order_id', 'product_id']
    )
    op.drop_constraint(
        op.f('purchase_order_line_product_id_fkey'),
        'purchase_order_line',
        type_='foreignkey'
    )
    op.create_foreign_key(
        None,
        'purchase_order_line',
        'product',
        ['product_id'],
        ['id'],
        ondelete='RESTRICT'
    )
    op.add_column(
        'user_account',
        sa.Column(
            'updated_at',
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            nullable=False
        )
    )
    op.add_column(
        'user_account',
        sa.Column('is_deleted', sa.Boolean(), nullable=False, server_default=sa.text('false')),
    )
    op.alter_column(
        'user_account', 'hashed_password',
        existing_type=sa.VARCHAR(length=255),
        type_=sa.Text(),
        existing_nullable=False
    )
    op.drop_column('user_account', 'is_active')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'user_account',
        sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False)
    )
    op.alter_column(
        'user_account', 'hashed_password',
        existing_type=sa.Text(),
        type_=sa.VARCHAR(length=255),
        existing_nullable=False
    )
    op.drop_column('user_account', 'is_deleted')
    op.drop_column('user_account', 'updated_at')
    op.drop_constraint(None, 'purchase_order_line', type_='foreignkey')
    op.create_foreign_key(
        op.f('purchase_order_line_product_id_fkey'),
        'purchase_order_line',
        'product',
        ['product_id'],
        ['id']
    )
    op.drop_constraint('uq_pol_po_product', 'purchase_order_line', type_='unique')
    op.drop_constraint(None, 'purchase_order', type_='foreignkey')
    op.create_foreign_key(
        op.f('purchase_order_supplier_id_fkey'),
        'purchase_order',
        'supplier',
        ['supplier_id'],
        ['id']
    )
    op.drop_column('purchase_order', 'created_at')
    op.drop_index(op.f('ix_product_sku'), table_name='product')
    op.create_unique_constraint(
        op.f('product_sku_key'),
        'product',
        ['sku'],
        postgresql_nulls_not_distinct=False
    )
    op.drop_index(op.f('ix_location_code'), table_name='location')
    op.create_unique_constraint(
        op.f('location_code_key'),
        'location',
        ['code'],
        postgresql_nulls_not_distinct=False
    )
    op.alter_column(
        'location', 'code',
        existing_type=sa.String(length=64),
        type_=sa.VARCHAR(length=32),
        existing_nullable=False
    )
    op.drop_constraint(None, 'inventory_txn', type_='foreignkey')
    op.drop_constraint(None, 'inventory_txn', type_='foreignkey')
    op.drop_constraint(None, 'inventory_txn', type_='foreignkey')
    op.create_foreign_key(
        op.f('inventory_txn_from_location_id_fkey'),
        'inventory_txn',
        'location',
        ['from_location_id'],
        ['id']
    )
    op.create_foreign_key(
        op.f('inventory_txn_to_location_id_fkey'),
        'inventory_txn',
        'location',
        ['to_location_id'],
        ['id']
    )
    op.create_foreign_key(
        op.f('inventory_txn_product_id_fkey'),
        'inventory_txn',
        'product',
        ['product_id'],
        ['id']
    )
    op.drop_constraint('uq_inventory_item_product_location', 'inventory_item', type_='unique')
    op.drop_index('ix_inventory_item_product_location', table_name='inventory_item')
    op.drop_column('inventory_item', 'created_at')
    # ### end Alembic commands ###
